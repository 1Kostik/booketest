{"mappings":"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","sources":["src/js/shoppingList.js","src/shopping_list.js"],"sourcesContent":["if (localStorage.getItem('shoppingList')) {\n    const shoppingListContainer = document.querySelector(\n      '.shopping-list-empty-page');\n  const newShoppingListContainer = document.createElement('div');\n  const shoppingListJSON = localStorage.getItem('shoppingList');\n  //количество книг в хранилище\n  let shoppingList = JSON.parse(shoppingListJSON);\n  //--------------------------------------------------------\n  // создание нового масива книг с разметкой и записью в контейнер нтмл\n  const shoplistBooks = checkShoplist(shoppingList);\n\n  function checkShoplist(shoppingList) {\n    return shoppingList.map(makeShoplistMarkup);\n  }\n  // CreateMarkup\n  // функци возращает новый масви книг с разметкой и записью в контейнер нтмл\n  function makeShoplistMarkup(shoppingList) {\n    const { bookImg, author, listName, description, title, buyLinks, id } =\n      shoppingList;\n\n    const shoplistBookContainer = document.createElement('div');\n    shoplistBookContainer.classList.add('shoplist-book-container');\n    shoplistBookContainer.dataset.id = id;\n\n    const shoplistMarkup = `<img src=\"${bookImg}\" class=\"shoplist-book-img\">\n        <div class=\"shoplist-desc-container\">\n          <h4 class=\"shoplist-book-title\">${title}</h4>\n          <p class=\"shoplist-book-genre\">${listName}</p>\n          <p class=\"shoplist-book-description\">${description}</p>\n           <p class=\"shoplist-book-author\">${author}</p>\n        </div>\n        <div class=\"shoplist-icons\">\n    <ul class=\"shoplist-icons-list\">\n      <li class=\"shoplist-icons-li\">\n        <a href=\"${buyLinks[0].url}\" target=\"blank\">\n          <div class=\"shoplist-icon-amazon\"></div>\n        </a>\n      </li>\n      <li class=\"shoplist-icons-li\">\n        <a href=\"${buyLinks[2].url}\" target=\"blank\">\n          <div class=\"shoplist-icon-barnesAndNoble\"></div>\n        </a>\n      </li>\n      <li class=\"shoplist-icons-li\">\n        <a href=\"${buyLinks[4].url}\" target=\"blank\">\n          <div class=\"shoplist-icon-bookshop\"></div>\n        </a>\n      </li>\n    </ul>\n  </div>\n        <div class=\"shoplist-trash\"></div>\n`;\n    //запись в контейнер\n    shoplistBookContainer.innerHTML = shoplistMarkup;\n    // Возврат контенера\n    return shoplistBookContainer;\n  }\n  // ----------------------------------------------------------\n  // Create new container and replace markup\n  \n  // const newShoppingListContainer = document.createElement('div');\n  \n  // newShoppingListContainer.classList.add('shopping-list-container');\n  \n  //текущая страница\n  \n  let currentPage = 1;\n  // сколько книг выводить на страничку\n  let rows = 3;\n  \n  // start(currentPage);\n  \n  let start = 0;\n let end = 3;\n  // отрисовывает кнопки на страничке\n  function displayPagination(arrData, rowPerPage) {\n    //  const pageContainer = document.querySelector('.shopping-list-container');\n    //  pageContainer.innerHTML = '';\n    const paginationEl = document.querySelector('.paginationBook');\n    const pagesCount = Math.ceil(arrData.length / rowPerPage);\n    const ulEl = document.createElement('ul');\n    ulEl.classList.add('pagination_list');\n    for (let i = 0; i < pagesCount; i += 1) {\n      const liEl = displayPaginationbtn(i + 1);\n      ulEl.appendChild(liEl);\n    }\n    paginationEl.appendChild(ulEl);\n  }   \n   \n  // отрисовывает кнопки из предыдущей функици\n  function displayPaginationbtn(pageEl) {\n    const liEl = document.createElement('li');    \n    liEl.classList.add('pagination_item');\n    liEl.innerText = pageEl;\n    if (currentPage == pageEl) liEl.classList.add('pagination_item_active');\n    \n    liEl.addEventListener('click', e => {      \n      const pageContainer = document.querySelector('.shopping-list-container');\n    \n      let currentBtn = Number(e.target.textContent);  \n      currentPage = currentBtn;\n  \n      let currentItemLi = document.querySelector('li.pagination_item_active');\n      currentItemLi.classList.remove('pagination_item_active');\n      liEl.classList.add('pagination_item_active');\n      \n      const shoplistBookContainer = document.querySelector(\n        '.shoplist-book-container'\n      );\n      const allBooks = document.querySelectorAll('.shoplist-book-container');\n        \n      allBooks.forEach((item) => {\n        item.remove()\n      })\n\n      const numberOfPage = startA(currentBtn);\n      \n    shoplistBooks.slice(numberOfPage[0], numberOfPage[1]).forEach(book => {\n     \n      newShoppingListContainer.appendChild(book);\n    });\n\n    shoppingListContainer.replaceWith(newShoppingListContainer);\n  \n    });\n    return liEl;\n  }\n  //   displayList(books, rows, currentPage);\n  displayPagination(shoppingList, rows);\n\n\n  // start(currentPage);\n \n  function startA(page) {\n    //  console.log(currentPage);\n    switch (page) {\n      case  1:\n        start = 0;\n        end = 3;\n        break;\n\n      case  2:\n        start = 3;\n        end = 6;\n        break ;\n      // case (page = 3):\n      //   start = 6;\n      //   end = 9;\n      //   break;\n      // case (page = 4):\n      //   start = 9;\n      //   end = 12;\n      //   break;\n      // case (page = 5):\n      //   start = 12;\n      //   end = 15;\n      //   break;\n      // case (page = 6):\n      //   start = 15;\n      //   end = 18;\n      //   break;\n      // case (page = 7):\n      //   start = 18;\n      //   end = 21;\n      //   break;\n      // case (page = 8):\n      //   start = 21;\n      //   end = 24;\n      //   break;\n      // case (page = 9):\n      //   start = 24;\n      //   end = 27;\n      //   break;\n      // case (page = 10):\n      //   start = 27;\n      //   end = 30;\n      //   break;\n      default:\n        інструкції;\n\n    }\n    return [start, end];\n  }\n    newShoppingListContainer.classList.add('shopping-list-container');\n  const numberOfPage = startA(currentPage);\n  console.log(numberOfPage)\n  shoplistBooks.slice(numberOfPage[0], numberOfPage[1]).forEach(book => {\n    console.log(book);\n    newShoppingListContainer.appendChild(book);\n  });\n\n    // shoplistBooks.forEach((book, index, array) => {\n\n    //           newShoppingListContainer.appendChild(book);\n\n    //   // newShoppingListContainer.appendChild(book);\n\n    // });\n\n    shoppingListContainer.replaceWith(newShoppingListContainer);\n\n    //--------------------------------------------------------------------------\n    // Add trash to each element\n\n    const shoplistTrash = document.querySelectorAll('.shoplist-trash');\n    shoplistTrash.forEach(trash => {\n      trash.addEventListener('click', removesBookFromShoppingList);\n    });\n\n    // Update Local Storage\n\n    function removesBookFromShoppingList(event) {\n      const id = event.target.closest('.shoplist-book-container').dataset.id;\n      shoppingList = shoppingList.filter(book => book.id !== id);\n      localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n      newShoppingListContainer.removeChild(\n        event.target.closest('.shoplist-book-container')\n      );\n\n      // Fix updating on the page\n\n      if (shoppingList.length === 0) {\n        newShoppingListContainer.replaceWith(shoppingListContainer);\n        paginationContainer.classList.add('pagination-hidden');\n      }\n    }\n\n    function updateBookOnStorage() {\n      localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n    }\n\n    if (shoppingList.length === 0) {\n      if (!document.querySelector('.shopping-list-container')) {\n        document.body.appendChild(newShoppingListContainer);\n      }\n      newShoppingListContainer.replaceWith(shoppingListContainer);\n    }\n\n    // Pagination\n\n    const paginationContainer = document.querySelector('.pagination-container');\n\n    if (paginationContainer) {\n      if (shoppingList.length === 0) {\n        paginationContainer.classList.add('pagination-hidden');\n      } else {\n        paginationContainer.classList.remove('pagination-hidden');\n      }\n    }\n  // }\n  // const { Pagination } = require(\"swiper\");\n}","import './js/fetchApi';\nimport './js/shoppingList';\nimport './js/formSignUp';\n\nimport './js/mobileMenu';\nimport './js/themeSwitch';\nimport './js/slider';\nimport './js/formFirebase';\nimport './js/paginetion';\n"],"names":["parcelRequire","localStorage","getItem","shoppingListContainer","document","querySelector","newShoppingListContainer","createElement","shoppingListJSON","shoppingList1","JSON","parse","shoplistBooks","map","$e608521657d26110$var$makeShoplistMarkup","shoppingList","bookImg","author","listName","description","title","buyLinks","id","shoplistBookContainer","classList","add","dataset","shoplistMarkup","url","innerHTML","currentPage","start","end","$e608521657d26110$var$displayPaginationbtn","pageEl","liEl","innerText","addEventListener","e","currentBtn","Number","target","textContent","remove","querySelectorAll","forEach","item","numberOfPage2","$e608521657d26110$var$startA","slice","book","appendChild","replaceWith","page","arrData","rowPerPage","paginationEl","pagesCount","Math","ceil","length","ulEl","i","$e608521657d26110$var$displayPagination","numberOfPage1","console","log","$e608521657d26110$var$removesBookFromShoppingList","event","closest","filter","setItem","stringify","removeChild","paginationContainer","trash","body"],"version":3,"file":"shopping_list.7ae9139c.js.map"}